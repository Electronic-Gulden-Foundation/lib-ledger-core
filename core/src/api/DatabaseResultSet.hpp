// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_DATABASERESULTSET_HPP
#define DJINNI_GENERATED_DATABASERESULTSET_HPP

#include <cstdint>
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class DatabaseBlob;
class DatabaseError;

class DatabaseResultSet {
public:
    virtual ~DatabaseResultSet() {}

    virtual int16_t getShortByName(const std::string & name) = 0;

    virtual int32_t getIntByName(const std::string & name) = 0;

    virtual float getFloatByName(const std::string & name) = 0;

    virtual double getDoubleByName(const std::string & name) = 0;

    virtual int64_t getLongByName(const std::string & name) = 0;

    virtual std::string getStringByName(const std::string & name) = 0;

    virtual bool isNullAtPos(int32_t pos) = 0;

    virtual bool isNullForName(const std::string & name) = 0;

    virtual std::string getColumnName(int32_t pos) = 0;

    virtual int16_t getShortByPos(int32_t pos) = 0;

    virtual int32_t getIntByPos(int32_t pos) = 0;

    virtual float getFloatByPos(int32_t pos) = 0;

    virtual double getDoubleByPos(int32_t pos) = 0;

    virtual int64_t getLongByPos(int32_t pos) = 0;

    virtual std::string getStringByPos(int32_t pos) = 0;

    virtual std::shared_ptr<DatabaseBlob> getBlobByPos(int32_t pos) = 0;

    virtual int32_t getRowNumber() = 0;

    virtual int32_t available() = 0;

    virtual bool hasNext() = 0;

    virtual std::shared_ptr<DatabaseResultSet> next() = 0;

    virtual void close() = 0;

    virtual std::shared_ptr<DatabaseError> getError() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_DATABASERESULTSET_HPP
