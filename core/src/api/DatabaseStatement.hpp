// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_DATABASESTATEMENT_HPP
#define DJINNI_GENERATED_DATABASESTATEMENT_HPP

#include <cstdint>
#include <memory>
#include <string>

namespace ledger { namespace core { namespace api {

class DatabaseBlob;
class DatabaseColumn;
class DatabaseResultSet;
class DatabaseRowId;

class DatabaseStatement {
public:
    virtual ~DatabaseStatement() {}

    virtual void bindShort(int32_t pos, int16_t value) = 0;

    virtual void bindInt(int32_t pos, int32_t value) = 0;

    virtual void bindLong(int32_t pos, int64_t value) = 0;

    virtual void bindFloat(int32_t pos, float value) = 0;

    virtual void bindDouble(int32_t pos, double value) = 0;

    virtual void bindString(int32_t pos, const std::string & value) = 0;

    virtual void bindBlob(int32_t pos, const std::shared_ptr<DatabaseBlob> & value) = 0;

    virtual void bindRowId(int32_t pos, const std::shared_ptr<DatabaseRowId> & value) = 0;

    virtual void bindNull(int32_t pos) = 0;

    virtual void bindShortByName(const std::string & name, int16_t value) = 0;

    virtual void bindIntByName(const std::string & name, int32_t value) = 0;

    virtual void bindLongByName(const std::string & name, int64_t value) = 0;

    virtual void bindFloatByName(const std::string & name, float value) = 0;

    virtual void bindDoubleByName(const std::string & name, double value) = 0;

    virtual void bindStringByName(const std::string & name, const std::string & value) = 0;

    virtual void bindBlobByName(const std::string & name, const std::shared_ptr<DatabaseBlob> & value) = 0;

    virtual void bindRowIdByName(const std::string & name, const std::shared_ptr<DatabaseRowId> & value) = 0;

    virtual void bindNullByName(const std::string & name) = 0;

    virtual std::shared_ptr<DatabaseColumn> describeColumn(int32_t colNum) = 0;

    virtual int32_t getColumnCount() = 0;

    virtual std::shared_ptr<DatabaseResultSet> execute() = 0;

    virtual void reset() = 0;

    virtual void close() = 0;
};

} } }  // namespace ledger::core::api
#endif //DJINNI_GENERATED_DATABASESTATEMENT_HPP
