// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: utils/commands.proto

#include "utils/commands.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_utils_2fcommands_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto;
namespace ledger {
namespace core {
namespace message {
namespace utils {
class CreateXpubFromPointsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateXpubFromPointsRequest> _instance;
} _CreateXpubFromPointsRequest_default_instance_;
class CreateXpubFromPointsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateXpubFromPointsResponse> _instance;
} _CreateXpubFromPointsResponse_default_instance_;
class UtilsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UtilsRequest> _instance;
  const ::ledger::core::message::utils::CreateXpubFromPointsRequest* xpub_from_points_;
} _UtilsRequest_default_instance_;
}  // namespace utils
}  // namespace message
}  // namespace core
}  // namespace ledger
static void InitDefaultsCreateXpubFromPointsRequest_utils_2fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ledger::core::message::utils::_CreateXpubFromPointsRequest_default_instance_;
    new (ptr) ::ledger::core::message::utils::CreateXpubFromPointsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ledger::core::message::utils::CreateXpubFromPointsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateXpubFromPointsRequest_utils_2fcommands_2eproto}, {}};

static void InitDefaultsCreateXpubFromPointsResponse_utils_2fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ledger::core::message::utils::_CreateXpubFromPointsResponse_default_instance_;
    new (ptr) ::ledger::core::message::utils::CreateXpubFromPointsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ledger::core::message::utils::CreateXpubFromPointsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateXpubFromPointsResponse_utils_2fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateXpubFromPointsResponse_utils_2fcommands_2eproto}, {}};

static void InitDefaultsUtilsRequest_utils_2fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ledger::core::message::utils::_UtilsRequest_default_instance_;
    new (ptr) ::ledger::core::message::utils::UtilsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ledger::core::message::utils::UtilsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UtilsRequest_utils_2fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUtilsRequest_utils_2fcommands_2eproto}, {
      &scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto.base,}};

void InitDefaults_utils_2fcommands_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateXpubFromPointsResponse_utils_2fcommands_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UtilsRequest_utils_2fcommands_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_utils_2fcommands_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_utils_2fcommands_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_utils_2fcommands_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_utils_2fcommands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, version_prefix_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, depth_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, parent_public_point_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, index_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, chain_code_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsRequest, public_point_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::CreateXpubFromPointsResponse, xpub_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::UtilsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::UtilsRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ledger::core::message::utils::UtilsRequestDefaultTypeInternal, xpub_from_points_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::utils::UtilsRequest, request_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ledger::core::message::utils::CreateXpubFromPointsRequest)},
  { 11, -1, sizeof(::ledger::core::message::utils::CreateXpubFromPointsResponse)},
  { 17, -1, sizeof(::ledger::core::message::utils::UtilsRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ledger::core::message::utils::_CreateXpubFromPointsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ledger::core::message::utils::_CreateXpubFromPointsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ledger::core::message::utils::_UtilsRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_utils_2fcommands_2eproto = {
  {}, AddDescriptors_utils_2fcommands_2eproto, "utils/commands.proto", schemas,
  file_default_instances, TableStruct_utils_2fcommands_2eproto::offsets,
  file_level_metadata_utils_2fcommands_2eproto, 3, file_level_enum_descriptors_utils_2fcommands_2eproto, file_level_service_descriptors_utils_2fcommands_2eproto,
};

const char descriptor_table_protodef_utils_2fcommands_2eproto[] =
  "\n\024utils/commands.proto\022\031ledger.core.mess"
  "age.utils\"\232\001\n\033CreateXpubFromPointsReques"
  "t\022\026\n\016version_prefix\030\001 \001(\t\022\r\n\005depth\030\002 \001(\r"
  "\022\033\n\023parent_public_point\030\003 \001(\t\022\r\n\005index\030\004"
  " \001(\r\022\022\n\nchain_code\030\005 \001(\t\022\024\n\014public_point"
  "\030\006 \001(\t\",\n\034CreateXpubFromPointsResponse\022\014"
  "\n\004xpub\030\001 \001(\t\"m\n\014UtilsRequest\022R\n\020xpub_fro"
  "m_points\030\001 \001(\01326.ledger.core.message.uti"
  "ls.CreateXpubFromPointsRequestH\000B\t\n\007requ"
  "estb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_utils_2fcommands_2eproto = {
  false, InitDefaults_utils_2fcommands_2eproto, 
  descriptor_table_protodef_utils_2fcommands_2eproto,
  "utils/commands.proto", &assign_descriptors_table_utils_2fcommands_2eproto, 371,
};

void AddDescriptors_utils_2fcommands_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_utils_2fcommands_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_utils_2fcommands_2eproto = []() { AddDescriptors_utils_2fcommands_2eproto(); return true; }();
namespace ledger {
namespace core {
namespace message {
namespace utils {

// ===================================================================

void CreateXpubFromPointsRequest::InitAsDefaultInstance() {
}
class CreateXpubFromPointsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateXpubFromPointsRequest::kVersionPrefixFieldNumber;
const int CreateXpubFromPointsRequest::kDepthFieldNumber;
const int CreateXpubFromPointsRequest::kParentPublicPointFieldNumber;
const int CreateXpubFromPointsRequest::kIndexFieldNumber;
const int CreateXpubFromPointsRequest::kChainCodeFieldNumber;
const int CreateXpubFromPointsRequest::kPublicPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateXpubFromPointsRequest::CreateXpubFromPointsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ledger.core.message.utils.CreateXpubFromPointsRequest)
}
CreateXpubFromPointsRequest::CreateXpubFromPointsRequest(const CreateXpubFromPointsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_prefix().size() > 0) {
    version_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_prefix_);
  }
  parent_public_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_public_point().size() > 0) {
    parent_public_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_public_point_);
  }
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chain_code().size() > 0) {
    chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
  }
  public_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_point().size() > 0) {
    public_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_point_);
  }
  ::memcpy(&depth_, &from.depth_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&depth_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:ledger.core.message.utils.CreateXpubFromPointsRequest)
}

void CreateXpubFromPointsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto.base);
  version_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_public_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_point_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&depth_)) + sizeof(index_));
}

CreateXpubFromPointsRequest::~CreateXpubFromPointsRequest() {
  // @@protoc_insertion_point(destructor:ledger.core.message.utils.CreateXpubFromPointsRequest)
  SharedDtor();
}

void CreateXpubFromPointsRequest::SharedDtor() {
  version_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_public_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_point_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateXpubFromPointsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateXpubFromPointsRequest& CreateXpubFromPointsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateXpubFromPointsRequest_utils_2fcommands_2eproto.base);
  return *internal_default_instance();
}


void CreateXpubFromPointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_public_point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chain_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_point_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&depth_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateXpubFromPointsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateXpubFromPointsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string version_prefix = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.utils.CreateXpubFromPointsRequest.version_prefix");
        object = msg->mutable_version_prefix();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 depth = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_depth(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string parent_public_point = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.utils.CreateXpubFromPointsRequest.parent_public_point");
        object = msg->mutable_parent_public_point();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 index = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string chain_code = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.utils.CreateXpubFromPointsRequest.chain_code");
        object = msg->mutable_chain_code();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string public_point = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.utils.CreateXpubFromPointsRequest.public_point");
        object = msg->mutable_public_point();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateXpubFromPointsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_prefix().data(), static_cast<int>(this->version_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.utils.CreateXpubFromPointsRequest.version_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 depth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_public_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_public_point()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_public_point().data(), static_cast<int>(this->parent_public_point().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.utils.CreateXpubFromPointsRequest.parent_public_point"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string chain_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chain_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chain_code().data(), static_cast<int>(this->chain_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.utils.CreateXpubFromPointsRequest.chain_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string public_point = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_point()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->public_point().data(), static_cast<int>(this->public_point().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.utils.CreateXpubFromPointsRequest.public_point"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ledger.core.message.utils.CreateXpubFromPointsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ledger.core.message.utils.CreateXpubFromPointsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateXpubFromPointsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_prefix = 1;
  if (this->version_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_prefix().data(), static_cast<int>(this->version_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.version_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_prefix(), output);
  }

  // uint32 depth = 2;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depth(), output);
  }

  // string parent_public_point = 3;
  if (this->parent_public_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_public_point().data(), static_cast<int>(this->parent_public_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.parent_public_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->parent_public_point(), output);
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->index(), output);
  }

  // string chain_code = 5;
  if (this->chain_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_code().data(), static_cast<int>(this->chain_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.chain_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->chain_code(), output);
  }

  // string public_point = 6;
  if (this->public_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_point().data(), static_cast<int>(this->public_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.public_point");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->public_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ledger.core.message.utils.CreateXpubFromPointsRequest)
}

::google::protobuf::uint8* CreateXpubFromPointsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_prefix = 1;
  if (this->version_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_prefix().data(), static_cast<int>(this->version_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.version_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_prefix(), target);
  }

  // uint32 depth = 2;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depth(), target);
  }

  // string parent_public_point = 3;
  if (this->parent_public_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_public_point().data(), static_cast<int>(this->parent_public_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.parent_public_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->parent_public_point(), target);
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->index(), target);
  }

  // string chain_code = 5;
  if (this->chain_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_code().data(), static_cast<int>(this->chain_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.chain_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chain_code(), target);
  }

  // string public_point = 6;
  if (this->public_point().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->public_point().data(), static_cast<int>(this->public_point().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsRequest.public_point");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->public_point(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ledger.core.message.utils.CreateXpubFromPointsRequest)
  return target;
}

size_t CreateXpubFromPointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version_prefix = 1;
  if (this->version_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_prefix());
  }

  // string parent_public_point = 3;
  if (this->parent_public_point().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_public_point());
  }

  // string chain_code = 5;
  if (this->chain_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chain_code());
  }

  // string public_point = 6;
  if (this->public_point().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->public_point());
  }

  // uint32 depth = 2;
  if (this->depth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());
  }

  // uint32 index = 4;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateXpubFromPointsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateXpubFromPointsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateXpubFromPointsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ledger.core.message.utils.CreateXpubFromPointsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ledger.core.message.utils.CreateXpubFromPointsRequest)
    MergeFrom(*source);
  }
}

void CreateXpubFromPointsRequest::MergeFrom(const CreateXpubFromPointsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version_prefix().size() > 0) {

    version_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_prefix_);
  }
  if (from.parent_public_point().size() > 0) {

    parent_public_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_public_point_);
  }
  if (from.chain_code().size() > 0) {

    chain_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_code_);
  }
  if (from.public_point().size() > 0) {

    public_point_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_point_);
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void CreateXpubFromPointsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateXpubFromPointsRequest::CopyFrom(const CreateXpubFromPointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ledger.core.message.utils.CreateXpubFromPointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateXpubFromPointsRequest::IsInitialized() const {
  return true;
}

void CreateXpubFromPointsRequest::Swap(CreateXpubFromPointsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateXpubFromPointsRequest::InternalSwap(CreateXpubFromPointsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  version_prefix_.Swap(&other->version_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_public_point_.Swap(&other->parent_public_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  chain_code_.Swap(&other->chain_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  public_point_.Swap(&other->public_point_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(depth_, other->depth_);
  swap(index_, other->index_);
}

::google::protobuf::Metadata CreateXpubFromPointsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_utils_2fcommands_2eproto);
  return ::file_level_metadata_utils_2fcommands_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateXpubFromPointsResponse::InitAsDefaultInstance() {
}
class CreateXpubFromPointsResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateXpubFromPointsResponse::kXpubFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateXpubFromPointsResponse::CreateXpubFromPointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ledger.core.message.utils.CreateXpubFromPointsResponse)
}
CreateXpubFromPointsResponse::CreateXpubFromPointsResponse(const CreateXpubFromPointsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xpub().size() > 0) {
    xpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpub_);
  }
  // @@protoc_insertion_point(copy_constructor:ledger.core.message.utils.CreateXpubFromPointsResponse)
}

void CreateXpubFromPointsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateXpubFromPointsResponse_utils_2fcommands_2eproto.base);
  xpub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateXpubFromPointsResponse::~CreateXpubFromPointsResponse() {
  // @@protoc_insertion_point(destructor:ledger.core.message.utils.CreateXpubFromPointsResponse)
  SharedDtor();
}

void CreateXpubFromPointsResponse::SharedDtor() {
  xpub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateXpubFromPointsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateXpubFromPointsResponse& CreateXpubFromPointsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateXpubFromPointsResponse_utils_2fcommands_2eproto.base);
  return *internal_default_instance();
}


void CreateXpubFromPointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xpub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateXpubFromPointsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateXpubFromPointsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string xpub = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.utils.CreateXpubFromPointsResponse.xpub");
        object = msg->mutable_xpub();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateXpubFromPointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string xpub = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xpub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xpub().data(), static_cast<int>(this->xpub().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.utils.CreateXpubFromPointsResponse.xpub"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ledger.core.message.utils.CreateXpubFromPointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ledger.core.message.utils.CreateXpubFromPointsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateXpubFromPointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xpub = 1;
  if (this->xpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpub().data(), static_cast<int>(this->xpub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsResponse.xpub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xpub(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ledger.core.message.utils.CreateXpubFromPointsResponse)
}

::google::protobuf::uint8* CreateXpubFromPointsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xpub = 1;
  if (this->xpub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xpub().data(), static_cast<int>(this->xpub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.utils.CreateXpubFromPointsResponse.xpub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xpub(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ledger.core.message.utils.CreateXpubFromPointsResponse)
  return target;
}

size_t CreateXpubFromPointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string xpub = 1;
  if (this->xpub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xpub());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateXpubFromPointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateXpubFromPointsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateXpubFromPointsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ledger.core.message.utils.CreateXpubFromPointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ledger.core.message.utils.CreateXpubFromPointsResponse)
    MergeFrom(*source);
  }
}

void CreateXpubFromPointsResponse::MergeFrom(const CreateXpubFromPointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xpub().size() > 0) {

    xpub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xpub_);
  }
}

void CreateXpubFromPointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateXpubFromPointsResponse::CopyFrom(const CreateXpubFromPointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ledger.core.message.utils.CreateXpubFromPointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateXpubFromPointsResponse::IsInitialized() const {
  return true;
}

void CreateXpubFromPointsResponse::Swap(CreateXpubFromPointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateXpubFromPointsResponse::InternalSwap(CreateXpubFromPointsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  xpub_.Swap(&other->xpub_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CreateXpubFromPointsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_utils_2fcommands_2eproto);
  return ::file_level_metadata_utils_2fcommands_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UtilsRequest::InitAsDefaultInstance() {
  ::ledger::core::message::utils::_UtilsRequest_default_instance_.xpub_from_points_ = const_cast< ::ledger::core::message::utils::CreateXpubFromPointsRequest*>(
      ::ledger::core::message::utils::CreateXpubFromPointsRequest::internal_default_instance());
}
class UtilsRequest::HasBitSetters {
 public:
  static const ::ledger::core::message::utils::CreateXpubFromPointsRequest& xpub_from_points(const UtilsRequest* msg);
};

const ::ledger::core::message::utils::CreateXpubFromPointsRequest&
UtilsRequest::HasBitSetters::xpub_from_points(const UtilsRequest* msg) {
  return *msg->request_.xpub_from_points_;
}
void UtilsRequest::set_allocated_xpub_from_points(::ledger::core::message::utils::CreateXpubFromPointsRequest* xpub_from_points) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_request();
  if (xpub_from_points) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      xpub_from_points = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, xpub_from_points, submessage_arena);
    }
    set_has_xpub_from_points();
    request_.xpub_from_points_ = xpub_from_points;
  }
  // @@protoc_insertion_point(field_set_allocated:ledger.core.message.utils.UtilsRequest.xpub_from_points)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UtilsRequest::kXpubFromPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UtilsRequest::UtilsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ledger.core.message.utils.UtilsRequest)
}
UtilsRequest::UtilsRequest(const UtilsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request();
  switch (from.request_case()) {
    case kXpubFromPoints: {
      mutable_xpub_from_points()->::ledger::core::message::utils::CreateXpubFromPointsRequest::MergeFrom(from.xpub_from_points());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ledger.core.message.utils.UtilsRequest)
}

void UtilsRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UtilsRequest_utils_2fcommands_2eproto.base);
  clear_has_request();
}

UtilsRequest::~UtilsRequest() {
  // @@protoc_insertion_point(destructor:ledger.core.message.utils.UtilsRequest)
  SharedDtor();
}

void UtilsRequest::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void UtilsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UtilsRequest& UtilsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UtilsRequest_utils_2fcommands_2eproto.base);
  return *internal_default_instance();
}


void UtilsRequest::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:ledger.core.message.utils.UtilsRequest)
  switch (request_case()) {
    case kXpubFromPoints: {
      delete request_.xpub_from_points_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void UtilsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ledger.core.message.utils.UtilsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UtilsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UtilsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .ledger.core.message.utils.CreateXpubFromPointsRequest xpub_from_points = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ledger::core::message::utils::CreateXpubFromPointsRequest::_InternalParse;
        object = msg->mutable_xpub_from_points();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UtilsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ledger.core.message.utils.UtilsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ledger.core.message.utils.CreateXpubFromPointsRequest xpub_from_points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_xpub_from_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ledger.core.message.utils.UtilsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ledger.core.message.utils.UtilsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UtilsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ledger.core.message.utils.UtilsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ledger.core.message.utils.CreateXpubFromPointsRequest xpub_from_points = 1;
  if (has_xpub_from_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::xpub_from_points(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ledger.core.message.utils.UtilsRequest)
}

::google::protobuf::uint8* UtilsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ledger.core.message.utils.UtilsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ledger.core.message.utils.CreateXpubFromPointsRequest xpub_from_points = 1;
  if (has_xpub_from_points()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::xpub_from_points(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ledger.core.message.utils.UtilsRequest)
  return target;
}

size_t UtilsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ledger.core.message.utils.UtilsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_case()) {
    // .ledger.core.message.utils.CreateXpubFromPointsRequest xpub_from_points = 1;
    case kXpubFromPoints: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *request_.xpub_from_points_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UtilsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ledger.core.message.utils.UtilsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UtilsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<UtilsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ledger.core.message.utils.UtilsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ledger.core.message.utils.UtilsRequest)
    MergeFrom(*source);
  }
}

void UtilsRequest::MergeFrom(const UtilsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ledger.core.message.utils.UtilsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kXpubFromPoints: {
      mutable_xpub_from_points()->::ledger::core::message::utils::CreateXpubFromPointsRequest::MergeFrom(from.xpub_from_points());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void UtilsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ledger.core.message.utils.UtilsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UtilsRequest::CopyFrom(const UtilsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ledger.core.message.utils.UtilsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UtilsRequest::IsInitialized() const {
  return true;
}

void UtilsRequest::Swap(UtilsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UtilsRequest::InternalSwap(UtilsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(request_, other->request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata UtilsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_utils_2fcommands_2eproto);
  return ::file_level_metadata_utils_2fcommands_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace utils
}  // namespace message
}  // namespace core
}  // namespace ledger
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ledger::core::message::utils::CreateXpubFromPointsRequest* Arena::CreateMaybeMessage< ::ledger::core::message::utils::CreateXpubFromPointsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ledger::core::message::utils::CreateXpubFromPointsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ledger::core::message::utils::CreateXpubFromPointsResponse* Arena::CreateMaybeMessage< ::ledger::core::message::utils::CreateXpubFromPointsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ledger::core::message::utils::CreateXpubFromPointsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ledger::core::message::utils::UtilsRequest* Arena::CreateMaybeMessage< ::ledger::core::message::utils::UtilsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ledger::core::message::utils::UtilsRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
