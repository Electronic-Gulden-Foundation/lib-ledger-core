// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core_configuration.proto

#include "core_configuration.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_core_5fconfiguration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto;
namespace ledger {
namespace core {
namespace message {
class DatabaseConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DatabaseConfiguration> _instance;
} _DatabaseConfiguration_default_instance_;
class LibCoreConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LibCoreConfiguration> _instance;
} _LibCoreConfiguration_default_instance_;
}  // namespace message
}  // namespace core
}  // namespace ledger
static void InitDefaultsDatabaseConfiguration_core_5fconfiguration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ledger::core::message::_DatabaseConfiguration_default_instance_;
    new (ptr) ::ledger::core::message::DatabaseConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ledger::core::message::DatabaseConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDatabaseConfiguration_core_5fconfiguration_2eproto}, {}};

static void InitDefaultsLibCoreConfiguration_core_5fconfiguration_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ledger::core::message::_LibCoreConfiguration_default_instance_;
    new (ptr) ::ledger::core::message::LibCoreConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ledger::core::message::LibCoreConfiguration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LibCoreConfiguration_core_5fconfiguration_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLibCoreConfiguration_core_5fconfiguration_2eproto}, {
      &scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto.base,}};

void InitDefaults_core_5fconfiguration_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LibCoreConfiguration_core_5fconfiguration_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_core_5fconfiguration_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_core_5fconfiguration_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_core_5fconfiguration_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_core_5fconfiguration_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::DatabaseConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::DatabaseConfiguration, db_name_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::DatabaseConfiguration, user_name_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::DatabaseConfiguration, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::LibCoreConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::LibCoreConfiguration, working_dir_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::LibCoreConfiguration, database_config_),
  PROTOBUF_FIELD_OFFSET(::ledger::core::message::LibCoreConfiguration, enable_internal_logging_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ledger::core::message::DatabaseConfiguration)},
  { 8, -1, sizeof(::ledger::core::message::LibCoreConfiguration)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ledger::core::message::_DatabaseConfiguration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ledger::core::message::_LibCoreConfiguration_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_core_5fconfiguration_2eproto = {
  {}, AddDescriptors_core_5fconfiguration_2eproto, "core_configuration.proto", schemas,
  file_default_instances, TableStruct_core_5fconfiguration_2eproto::offsets,
  file_level_metadata_core_5fconfiguration_2eproto, 2, file_level_enum_descriptors_core_5fconfiguration_2eproto, file_level_service_descriptors_core_5fconfiguration_2eproto,
};

const char descriptor_table_protodef_core_5fconfiguration_2eproto[] =
  "\n\030core_configuration.proto\022\023ledger.core."
  "message\"M\n\025DatabaseConfiguration\022\017\n\007db_n"
  "ame\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\020\n\010password"
  "\030\003 \001(\t\"\221\001\n\024LibCoreConfiguration\022\023\n\013worki"
  "ng_dir\030\001 \001(\t\022C\n\017database_config\030\002 \001(\0132*."
  "ledger.core.message.DatabaseConfiguratio"
  "n\022\037\n\027enable_internal_logging\030\003 \001(\010b\006prot"
  "o3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_core_5fconfiguration_2eproto = {
  false, InitDefaults_core_5fconfiguration_2eproto, 
  descriptor_table_protodef_core_5fconfiguration_2eproto,
  "core_configuration.proto", &assign_descriptors_table_core_5fconfiguration_2eproto, 282,
};

void AddDescriptors_core_5fconfiguration_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_core_5fconfiguration_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_core_5fconfiguration_2eproto = []() { AddDescriptors_core_5fconfiguration_2eproto(); return true; }();
namespace ledger {
namespace core {
namespace message {

// ===================================================================

void DatabaseConfiguration::InitAsDefaultInstance() {
}
class DatabaseConfiguration::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatabaseConfiguration::kDbNameFieldNumber;
const int DatabaseConfiguration::kUserNameFieldNumber;
const int DatabaseConfiguration::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatabaseConfiguration::DatabaseConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ledger.core.message.DatabaseConfiguration)
}
DatabaseConfiguration::DatabaseConfiguration(const DatabaseConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.db_name().size() > 0) {
    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:ledger.core.message.DatabaseConfiguration)
}

void DatabaseConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto.base);
  db_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DatabaseConfiguration::~DatabaseConfiguration() {
  // @@protoc_insertion_point(destructor:ledger.core.message.DatabaseConfiguration)
  SharedDtor();
}

void DatabaseConfiguration::SharedDtor() {
  db_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DatabaseConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DatabaseConfiguration& DatabaseConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DatabaseConfiguration_core_5fconfiguration_2eproto.base);
  return *internal_default_instance();
}


void DatabaseConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:ledger.core.message.DatabaseConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DatabaseConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DatabaseConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string db_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.DatabaseConfiguration.db_name");
        object = msg->mutable_db_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string user_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.DatabaseConfiguration.user_name");
        object = msg->mutable_user_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string password = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.DatabaseConfiguration.password");
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DatabaseConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ledger.core.message.DatabaseConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string db_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_db_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->db_name().data(), static_cast<int>(this->db_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.DatabaseConfiguration.db_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.DatabaseConfiguration.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.DatabaseConfiguration.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ledger.core.message.DatabaseConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ledger.core.message.DatabaseConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DatabaseConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ledger.core.message.DatabaseConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.db_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->db_name(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ledger.core.message.DatabaseConfiguration)
}

::google::protobuf::uint8* DatabaseConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ledger.core.message.DatabaseConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->db_name().data(), static_cast<int>(this->db_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.db_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->db_name(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.DatabaseConfiguration.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ledger.core.message.DatabaseConfiguration)
  return target;
}

size_t DatabaseConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ledger.core.message.DatabaseConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string db_name = 1;
  if (this->db_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->db_name());
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DatabaseConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ledger.core.message.DatabaseConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const DatabaseConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<DatabaseConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ledger.core.message.DatabaseConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ledger.core.message.DatabaseConfiguration)
    MergeFrom(*source);
  }
}

void DatabaseConfiguration::MergeFrom(const DatabaseConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ledger.core.message.DatabaseConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.db_name().size() > 0) {

    db_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.db_name_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void DatabaseConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ledger.core.message.DatabaseConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatabaseConfiguration::CopyFrom(const DatabaseConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ledger.core.message.DatabaseConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatabaseConfiguration::IsInitialized() const {
  return true;
}

void DatabaseConfiguration::Swap(DatabaseConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatabaseConfiguration::InternalSwap(DatabaseConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  db_name_.Swap(&other->db_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata DatabaseConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_core_5fconfiguration_2eproto);
  return ::file_level_metadata_core_5fconfiguration_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LibCoreConfiguration::InitAsDefaultInstance() {
  ::ledger::core::message::_LibCoreConfiguration_default_instance_._instance.get_mutable()->database_config_ = const_cast< ::ledger::core::message::DatabaseConfiguration*>(
      ::ledger::core::message::DatabaseConfiguration::internal_default_instance());
}
class LibCoreConfiguration::HasBitSetters {
 public:
  static const ::ledger::core::message::DatabaseConfiguration& database_config(const LibCoreConfiguration* msg);
};

const ::ledger::core::message::DatabaseConfiguration&
LibCoreConfiguration::HasBitSetters::database_config(const LibCoreConfiguration* msg) {
  return *msg->database_config_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LibCoreConfiguration::kWorkingDirFieldNumber;
const int LibCoreConfiguration::kDatabaseConfigFieldNumber;
const int LibCoreConfiguration::kEnableInternalLoggingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LibCoreConfiguration::LibCoreConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ledger.core.message.LibCoreConfiguration)
}
LibCoreConfiguration::LibCoreConfiguration(const LibCoreConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  working_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.working_dir().size() > 0) {
    working_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_dir_);
  }
  if (from.has_database_config()) {
    database_config_ = new ::ledger::core::message::DatabaseConfiguration(*from.database_config_);
  } else {
    database_config_ = nullptr;
  }
  enable_internal_logging_ = from.enable_internal_logging_;
  // @@protoc_insertion_point(copy_constructor:ledger.core.message.LibCoreConfiguration)
}

void LibCoreConfiguration::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LibCoreConfiguration_core_5fconfiguration_2eproto.base);
  working_dir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&database_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enable_internal_logging_) -
      reinterpret_cast<char*>(&database_config_)) + sizeof(enable_internal_logging_));
}

LibCoreConfiguration::~LibCoreConfiguration() {
  // @@protoc_insertion_point(destructor:ledger.core.message.LibCoreConfiguration)
  SharedDtor();
}

void LibCoreConfiguration::SharedDtor() {
  working_dir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete database_config_;
}

void LibCoreConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LibCoreConfiguration& LibCoreConfiguration::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LibCoreConfiguration_core_5fconfiguration_2eproto.base);
  return *internal_default_instance();
}


void LibCoreConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:ledger.core.message.LibCoreConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  working_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && database_config_ != nullptr) {
    delete database_config_;
  }
  database_config_ = nullptr;
  enable_internal_logging_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LibCoreConfiguration::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LibCoreConfiguration*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string working_dir = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ledger.core.message.LibCoreConfiguration.working_dir");
        object = msg->mutable_working_dir();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .ledger.core.message.DatabaseConfiguration database_config = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::ledger::core::message::DatabaseConfiguration::_InternalParse;
        object = msg->mutable_database_config();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bool enable_internal_logging = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_enable_internal_logging(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LibCoreConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ledger.core.message.LibCoreConfiguration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string working_dir = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_working_dir()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->working_dir().data(), static_cast<int>(this->working_dir().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ledger.core.message.LibCoreConfiguration.working_dir"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ledger.core.message.DatabaseConfiguration database_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_database_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_internal_logging = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_internal_logging_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ledger.core.message.LibCoreConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ledger.core.message.LibCoreConfiguration)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LibCoreConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ledger.core.message.LibCoreConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string working_dir = 1;
  if (this->working_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_dir().data(), static_cast<int>(this->working_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.LibCoreConfiguration.working_dir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->working_dir(), output);
  }

  // .ledger.core.message.DatabaseConfiguration database_config = 2;
  if (this->has_database_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::database_config(this), output);
  }

  // bool enable_internal_logging = 3;
  if (this->enable_internal_logging() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->enable_internal_logging(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ledger.core.message.LibCoreConfiguration)
}

::google::protobuf::uint8* LibCoreConfiguration::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ledger.core.message.LibCoreConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string working_dir = 1;
  if (this->working_dir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->working_dir().data(), static_cast<int>(this->working_dir().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ledger.core.message.LibCoreConfiguration.working_dir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->working_dir(), target);
  }

  // .ledger.core.message.DatabaseConfiguration database_config = 2;
  if (this->has_database_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::database_config(this), target);
  }

  // bool enable_internal_logging = 3;
  if (this->enable_internal_logging() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->enable_internal_logging(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ledger.core.message.LibCoreConfiguration)
  return target;
}

size_t LibCoreConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ledger.core.message.LibCoreConfiguration)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string working_dir = 1;
  if (this->working_dir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->working_dir());
  }

  // .ledger.core.message.DatabaseConfiguration database_config = 2;
  if (this->has_database_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *database_config_);
  }

  // bool enable_internal_logging = 3;
  if (this->enable_internal_logging() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LibCoreConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ledger.core.message.LibCoreConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const LibCoreConfiguration* source =
      ::google::protobuf::DynamicCastToGenerated<LibCoreConfiguration>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ledger.core.message.LibCoreConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ledger.core.message.LibCoreConfiguration)
    MergeFrom(*source);
  }
}

void LibCoreConfiguration::MergeFrom(const LibCoreConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ledger.core.message.LibCoreConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.working_dir().size() > 0) {

    working_dir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.working_dir_);
  }
  if (from.has_database_config()) {
    mutable_database_config()->::ledger::core::message::DatabaseConfiguration::MergeFrom(from.database_config());
  }
  if (from.enable_internal_logging() != 0) {
    set_enable_internal_logging(from.enable_internal_logging());
  }
}

void LibCoreConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ledger.core.message.LibCoreConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LibCoreConfiguration::CopyFrom(const LibCoreConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ledger.core.message.LibCoreConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LibCoreConfiguration::IsInitialized() const {
  return true;
}

void LibCoreConfiguration::Swap(LibCoreConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LibCoreConfiguration::InternalSwap(LibCoreConfiguration* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  working_dir_.Swap(&other->working_dir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(database_config_, other->database_config_);
  swap(enable_internal_logging_, other->enable_internal_logging_);
}

::google::protobuf::Metadata LibCoreConfiguration::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_core_5fconfiguration_2eproto);
  return ::file_level_metadata_core_5fconfiguration_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
}  // namespace core
}  // namespace ledger
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ledger::core::message::DatabaseConfiguration* Arena::CreateMaybeMessage< ::ledger::core::message::DatabaseConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::ledger::core::message::DatabaseConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::ledger::core::message::LibCoreConfiguration* Arena::CreateMaybeMessage< ::ledger::core::message::LibCoreConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::ledger::core::message::LibCoreConfiguration >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
