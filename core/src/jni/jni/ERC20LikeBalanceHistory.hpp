// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from erc20.djinni

#ifndef DJINNI_GENERATED_ERC20LIKEBALANCEHISTORY_HPP_JNI_
#define DJINNI_GENERATED_ERC20LIKEBALANCEHISTORY_HPP_JNI_

#include "../../api/ERC20LikeBalanceHistory.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class ERC20LikeBalanceHistory final {
public:
    using CppType = ::ledger::core::api::ERC20LikeBalanceHistory;
    using JniType = jobject;

    using Boxed = ERC20LikeBalanceHistory;

    ~ERC20LikeBalanceHistory();

    static CppType toCpp(JNIEnv* jniEnv, JniType j);
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c);

private:
    ERC20LikeBalanceHistory();
    friend ::djinni::JniClass<ERC20LikeBalanceHistory>;

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/ERC20LikeBalanceHistory") };
    const jmethodID jconstructor { ::djinni::jniGetMethodID(clazz.get(), "<init>", "(Lco/ledger/core/TimePeriod;Ljava/util/Date;Ljava/util/Date;Ljava/util/ArrayList;)V") };
    const jfieldID field_period { ::djinni::jniGetFieldID(clazz.get(), "period", "Lco/ledger/core/TimePeriod;") };
    const jfieldID field_startDate { ::djinni::jniGetFieldID(clazz.get(), "startDate", "Ljava/util/Date;") };
    const jfieldID field_endDate { ::djinni::jniGetFieldID(clazz.get(), "endDate", "Ljava/util/Date;") };
    const jfieldID field_balances { ::djinni::jniGetFieldID(clazz.get(), "balances", "Ljava/util/ArrayList;") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_ERC20LIKEBALANCEHISTORY_HPP_JNI_
