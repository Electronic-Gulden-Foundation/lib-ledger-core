// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#include "DatabaseResultSet.hpp"  // my header
#include "DatabaseBlob.hpp"
#include "DatabaseError.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

DatabaseResultSet::DatabaseResultSet() : ::djinni::JniInterface<::ledger::core::api::DatabaseResultSet, DatabaseResultSet>() {}

DatabaseResultSet::~DatabaseResultSet() = default;

DatabaseResultSet::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

DatabaseResultSet::JavaProxy::~JavaProxy() = default;

int16_t DatabaseResultSet::JavaProxy::getShortByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallShortMethod(Handle::get().get(), data.method_getShortByName,
                                        ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I16::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::getIntByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getIntByName,
                                      ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
float DatabaseResultSet::JavaProxy::getFloatByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallFloatMethod(Handle::get().get(), data.method_getFloatByName,
                                        ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::F32::toCpp(jniEnv, jret);
}
double DatabaseResultSet::JavaProxy::getDoubleByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallDoubleMethod(Handle::get().get(), data.method_getDoubleByName,
                                         ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::F64::toCpp(jniEnv, jret);
}
int64_t DatabaseResultSet::JavaProxy::getLongByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallLongMethod(Handle::get().get(), data.method_getLongByName,
                                       ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I64::toCpp(jniEnv, jret);
}
std::string DatabaseResultSet::JavaProxy::getStringByName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getStringByName,
                                                  ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
bool DatabaseResultSet::JavaProxy::isNullAtPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_isNullAtPos,
                                          ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
bool DatabaseResultSet::JavaProxy::isNullForName(const std::string & c_name) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_isNullForName,
                                          ::djinni::get(::djinni::String::fromCpp(jniEnv, c_name)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
std::string DatabaseResultSet::JavaProxy::getColumnName(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getColumnName,
                                                  ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
int16_t DatabaseResultSet::JavaProxy::getShortByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallShortMethod(Handle::get().get(), data.method_getShortByPos,
                                        ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I16::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::getIntByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getIntByPos,
                                      ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
float DatabaseResultSet::JavaProxy::getFloatByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallFloatMethod(Handle::get().get(), data.method_getFloatByPos,
                                        ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::F32::toCpp(jniEnv, jret);
}
double DatabaseResultSet::JavaProxy::getDoubleByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallDoubleMethod(Handle::get().get(), data.method_getDoubleByPos,
                                         ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::F64::toCpp(jniEnv, jret);
}
int64_t DatabaseResultSet::JavaProxy::getLongByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallLongMethod(Handle::get().get(), data.method_getLongByPos,
                                       ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I64::toCpp(jniEnv, jret);
}
std::string DatabaseResultSet::JavaProxy::getStringByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getStringByPos,
                                                  ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}
std::shared_ptr<::ledger::core::api::DatabaseBlob> DatabaseResultSet::JavaProxy::getBlobByPos(int32_t c_pos) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getBlobByPos,
                                         ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_pos)));
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseBlob::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::getRowNumber() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_getRowNumber);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
int32_t DatabaseResultSet::JavaProxy::available() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallIntMethod(Handle::get().get(), data.method_available);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::I32::toCpp(jniEnv, jret);
}
bool DatabaseResultSet::JavaProxy::hasNext() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallBooleanMethod(Handle::get().get(), data.method_hasNext);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::Bool::toCpp(jniEnv, jret);
}
std::shared_ptr<::ledger::core::api::DatabaseResultSet> DatabaseResultSet::JavaProxy::next() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_next);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseResultSet::toCpp(jniEnv, jret);
}
void DatabaseResultSet::JavaProxy::close() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_close);
    ::djinni::jniExceptionCheck(jniEnv);
}
std::shared_ptr<::ledger::core::api::DatabaseError> DatabaseResultSet::JavaProxy::getError() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseResultSet>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getError);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseError::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
