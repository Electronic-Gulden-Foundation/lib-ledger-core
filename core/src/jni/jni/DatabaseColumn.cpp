// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#include "DatabaseColumn.hpp"  // my header
#include "DatabaseValueType.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

DatabaseColumn::DatabaseColumn() : ::djinni::JniInterface<::ledger::core::api::DatabaseColumn, DatabaseColumn>() {}

DatabaseColumn::~DatabaseColumn() = default;

DatabaseColumn::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

DatabaseColumn::JavaProxy::~JavaProxy() = default;

::ledger::core::api::DatabaseValueType DatabaseColumn::JavaProxy::getType() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseColumn>::get();
    auto jret = jniEnv->CallObjectMethod(Handle::get().get(), data.method_getType);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni_generated::DatabaseValueType::toCpp(jniEnv, jret);
}
std::string DatabaseColumn::JavaProxy::getName() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::DatabaseColumn>::get();
    auto jret = (jstring)jniEnv->CallObjectMethod(Handle::get().get(), data.method_getName);
    ::djinni::jniExceptionCheck(jniEnv);
    return ::djinni::String::toCpp(jniEnv, jret);
}

}  // namespace djinni_generated
