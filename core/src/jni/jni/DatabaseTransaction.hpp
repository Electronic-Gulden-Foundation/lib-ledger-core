// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from database.djinni

#ifndef DJINNI_GENERATED_DATABASETRANSACTION_HPP_JNI_
#define DJINNI_GENERATED_DATABASETRANSACTION_HPP_JNI_

#include "../../api/DatabaseTransaction.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class DatabaseTransaction final : ::djinni::JniInterface<::ledger::core::api::DatabaseTransaction, DatabaseTransaction> {
public:
    using CppType = std::shared_ptr<::ledger::core::api::DatabaseTransaction>;
    using CppOptType = std::shared_ptr<::ledger::core::api::DatabaseTransaction>;
    using JniType = jobject;

    using Boxed = DatabaseTransaction;

    ~DatabaseTransaction();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<DatabaseTransaction>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<DatabaseTransaction>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    DatabaseTransaction();
    friend ::djinni::JniClass<DatabaseTransaction>;
    friend ::djinni::JniInterface<::ledger::core::api::DatabaseTransaction, DatabaseTransaction>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ledger::core::api::DatabaseTransaction
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void prepareStatement(const std::string & query) override;
        void commit() override;
        void rollback() override;

    private:
        friend ::djinni::JniInterface<::ledger::core::api::DatabaseTransaction, ::djinni_generated::DatabaseTransaction>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("co/ledger/core/DatabaseTransaction") };
    const jmethodID method_prepareStatement { ::djinni::jniGetMethodID(clazz.get(), "prepareStatement", "(Ljava/lang/String;)V") };
    const jmethodID method_commit { ::djinni::jniGetMethodID(clazz.get(), "commit", "()V") };
    const jmethodID method_rollback { ::djinni::jniGetMethodID(clazz.get(), "rollback", "()V") };
};

}  // namespace djinni_generated
#endif //DJINNI_GENERATED_DATABASETRANSACTION_HPP_JNI_
